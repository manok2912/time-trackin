{"version":3,"sources":["js/client.js","js/helpers.js","TimersDashboard.js","App.js","index.js"],"names":["checkStatus","response","status","error","Error","statusText","console","log","parseJSON","json","client","getTimers","success","fetch","headers","Accept","then","createTimer","data","method","body","JSON","stringify","updateTimer","startTimer","stopTimer","deleteTimer","uuidv4","require","v4","millisecondsToHuman","ms","seconds","Math","floor","minutes","pad","toString","join","numberString","size","padded","length","helpers","newTimer","attrs","timer","title","project","id","elapsed","findById","array","cb","forEach","el","renderElapsedString","runningSince","totalElapsed","Date","now","TimersDashboard","state","timers","loadTimersFromServer","serverTimers","setState","handleCreateFormSubmit","handleEditFormSubmit","handleTrashClick","timerId","handleStartClick","handleStopClick","t","concat","map","Object","assign","filter","start","lastElapsed","stop","this","setInterval","className","onFormSubmit","onTrashClick","onStartClick","onStopClick","React","Component","ToggleableTimerForm","isOpen","handleFormOpen","handleFormClose","handleFormSubmit","props","onFormClose","onClick","EditableTimerList","EditableTimer","editFormOpen","handleEditClick","openForm","closeForm","handleSubmit","onEditClick","Timer","forceUpdateInterval","forceUpdate","clearInterval","elapsedString","limit_seconds","getDay","time_split","split","timerIsRunning","TimerActionButton","TimerForm","handleTitleChange","e","target","value","handleProjectChange","submitText","type","onChange","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.efcd4ceb.chunk.js","sourcesContent":["function getTimers(success) {\n  return fetch('https://time-racker.herokuapp.com/api/timers', {\n    headers: {\n      Accept: 'application/json',\n    },\n  }).then(checkStatus)\n    .then(parseJSON)\n    .then(success);\n}\n\nfunction createTimer(data) {\n  return fetch('https://time-racker.herokuapp.com/api/timers', {\n    method: 'post',\n    body: JSON.stringify(data),\n    headers: {\n      'Accept': 'application/json',\n      'Content-Type': 'application/json',\n    },\n  }).then(checkStatus);\n}\n\nfunction updateTimer(data) {\n  return fetch('https://time-racker.herokuapp.com/api/timers', {\n    method: 'put',\n    body: JSON.stringify(data),\n    headers: {\n      'Accept': 'application/json',\n      'Content-Type': 'application/json',\n    },\n  }).then(checkStatus);\n}\n\nfunction deleteTimer(data) {\n  return fetch('https://time-racker.herokuapp.com/api/timers', {\n    method: 'delete',\n    body: JSON.stringify(data),\n    headers: {\n      'Accept': 'application/json',\n      'Content-Type': 'application/json',\n    },\n  }).then(checkStatus);\n}\n\nfunction startTimer(data) {\n  return fetch('https://time-racker.herokuapp.com/api/timers/start', {\n    method: 'post',\n    body: JSON.stringify(data),\n    headers: {\n      'Accept': 'application/json',\n      'Content-Type': 'application/json',\n    },\n  }).then(checkStatus);\n}\n\nfunction stopTimer(data) {\n  return fetch('https://time-racker.herokuapp.com/api/timers/stop', {\n    method: 'post',\n    body: JSON.stringify(data),\n    headers: {\n      'Accept': 'application/json',\n      'Content-Type': 'application/json',\n    },\n  }).then(checkStatus);\n}\n\nfunction checkStatus(response) {\n  if (response.status >= 200 && response.status < 300) {\n    return response;\n  } else {\n    const error = new Error(`HTTP Error ${response.statusText}`);\n    error.status = response.statusText;\n    error.response = response;\n    console.log(error);\n    throw error;\n  }\n}\n\nfunction parseJSON(response) {\n  return response.json();\n}\n\nconst client = {\n    getTimers,\n    createTimer,\n    updateTimer,\n    startTimer,\n    stopTimer,\n    deleteTimer,\n}\n\nexport default client;","const { v4: uuidv4 } = require('uuid');\n\n\nfunction newTimer(attrs = {}) {\n  const timer = {\n    title: attrs.title || 'Timer',\n    project: attrs.project || 'Project',\n    id: uuidv4(), // eslint-disable-line no-undef\n    elapsed: 0,\n  };\n\n  return timer;\n}\n\nfunction findById(array, id, cb) {\n  array.forEach((el) => {\n    if (el.id === id) {\n      cb(el);\n      return;\n    }\n  });\n}\n\nfunction renderElapsedString(elapsed, runningSince) {\n  let totalElapsed = elapsed;\n  if (runningSince) {\n    totalElapsed += Date.now() - runningSince;\n  }\n  return millisecondsToHuman(totalElapsed);\n}\n\nfunction millisecondsToHuman(ms) {\n  const seconds = Math.floor((ms / 1000) % 60);\n  const minutes = Math.floor((ms / 1000 / 60) % 60);\n  const hours = Math.floor(ms / 1000 / 60 / 60);\n\n  const humanized = [\n    pad(hours.toString(), 2),\n    pad(minutes.toString(), 2),\n    pad(seconds.toString(), 2),\n  ].join(':');\n\n  return humanized;\n}\n\nfunction pad(numberString, size) {\n  let padded = numberString;\n  while (padded.length < size) padded = `0${padded}`;\n  return padded;\n}\n\nconst helpers = {\n  millisecondsToHuman,\n  newTimer,\n  findById,\n  renderElapsedString,\n}\n\nexport default helpers;","import React from 'react';\nimport client from './js/client'\nimport helpers from './js/helpers'\n\n\nclass TimersDashboard extends React.Component {\n  state = {\n    timers: [],\n  };\n\n  componentDidMount() {\n    this.loadTimersFromServer();\n    setInterval(this.loadTimersFromServer, 5000);\n  }\n\n  loadTimersFromServer = () => {\n    client.getTimers((serverTimers) => (\n      this.setState({ timers: serverTimers })\n    )\n    );\n  };\n\n  handleCreateFormSubmit = (timer) => {\n    this.createTimer(timer);\n  };\n\n  handleEditFormSubmit = (attrs) => {\n    this.updateTimer(attrs);\n  };\n\n  handleTrashClick = (timerId) => {\n    this.deleteTimer(timerId);\n  };\n\n  handleStartClick = (timerId) => {\n    this.startTimer(timerId);\n  };\n\n  handleStopClick = (timerId) => {\n    this.stopTimer(timerId);\n  };\n\n  // Inside TimersDashboard\n  // ...\n  createTimer = (timer) => {\n    const t = helpers.newTimer(timer);\n    this.setState({\n      timers: this.state.timers.concat(t),\n    });\n\n    client.createTimer(t);\n  };\n\n  updateTimer = (attrs) => {\n    this.setState({\n      timers: this.state.timers.map((timer) => {\n        if (timer.id === attrs.id) {\n          return Object.assign({}, timer, {\n            title: attrs.title,\n            project: attrs.project,\n          });\n        } else {\n          return timer;\n        }\n      }),\n    });\n\n    client.updateTimer(attrs);\n  };\n\n  deleteTimer = (timerId) => {\n    this.setState({\n      timers: this.state.timers.filter(t => t.id !== timerId),\n    });\n\n    client.deleteTimer(\n      { id: timerId }\n    );\n  };\n\n  startTimer = (timerId) => {\n    // ...\n    const now = Date.now();\n\n    this.setState({\n      timers: this.state.timers.map((timer) => {\n        if (timer.id === timerId) {\n          return Object.assign({}, timer, {\n            runningSince: now,\n          });\n        } else {\n          return timer;\n        }\n      }),\n    });\n\n    client.startTimer(\n      { id: timerId, start: now }\n    );\n  };\n\n  stopTimer = (timerId) => {\n    const now = Date.now();\n\n    this.setState({\n      timers: this.state.timers.map((timer) => {\n        if (timer.id === timerId) {\n          const lastElapsed = now - timer.runningSince;\n          return Object.assign({}, timer, {\n            elapsed: timer.elapsed + lastElapsed,\n            runningSince: null,\n          });\n        } else {\n          return timer;\n        }\n      }),\n    });\n\n    client.stopTimer(\n      { id: timerId, stop: now }\n    );\n  };\n\n  render() {\n    return (\n      <div className='ui three column centered grid'>\n        <div className='column'>\n          <EditableTimerList\n            timers={this.state.timers}\n            onFormSubmit={this.handleEditFormSubmit}\n            onTrashClick={this.handleTrashClick}\n            onStartClick={this.handleStartClick}\n            onStopClick={this.handleStopClick}\n          />\n          <ToggleableTimerForm\n            onFormSubmit={this.handleCreateFormSubmit}\n          />\n        </div>\n      </div>\n    );\n  }\n}\n\nclass ToggleableTimerForm extends React.Component {\n  state = {\n    isOpen: false,\n  };\n\n  handleFormOpen = () => {\n    this.setState({ isOpen: true });\n  };\n\n  handleFormClose = () => {\n    this.setState({ isOpen: false });\n  };\n\n  handleFormSubmit = (timer) => {\n    this.props.onFormSubmit(timer);\n    this.setState({ isOpen: false });\n  };\n\n  render() {\n    if (this.state.isOpen) {\n      return (\n        <TimerForm\n          onFormSubmit={this.handleFormSubmit}\n          onFormClose={this.handleFormClose}\n        />\n      );\n    } else {\n      return (\n        <div className='ui basic content center aligned segment'>\n          <button\n            className='ui basic button icon'\n            onClick={this.handleFormOpen}\n          >\n            <i className='plus icon' />\n          </button>\n        </div>\n      );\n    }\n  }\n}\n\nclass EditableTimerList extends React.Component {\n  render() {\n    const timers = this.props.timers.map((timer) => (\n      <EditableTimer\n        key={timer.id}\n        id={timer.id}\n        title={timer.title}\n        project={timer.project}\n        elapsed={timer.elapsed}\n        runningSince={timer.runningSince}\n        onFormSubmit={this.props.onFormSubmit}\n        onTrashClick={this.props.onTrashClick}\n        onStartClick={this.props.onStartClick}\n        onStopClick={this.props.onStopClick}\n      />\n    ));\n    return (\n      <div id='timers'>\n        {timers}\n      </div>\n    );\n  }\n}\n\nclass EditableTimer extends React.Component {\n  state = {\n    editFormOpen: false,\n  };\n\n  handleEditClick = () => {\n    this.openForm();\n  };\n\n  handleFormClose = () => {\n    this.closeForm();\n  };\n\n  handleSubmit = (timer) => {\n    this.props.onFormSubmit(timer);\n    this.closeForm();\n  };\n\n  closeForm = () => {\n    this.setState({ editFormOpen: false });\n  };\n\n  openForm = () => {\n    this.setState({ editFormOpen: true });\n  };\n\n  render() {\n    if (this.state.editFormOpen) {\n      return (\n        <TimerForm\n          id={this.props.id}\n          title={this.props.title}\n          project={this.props.project}\n          onFormSubmit={this.handleSubmit}\n          onFormClose={this.handleFormClose}\n        />\n      );\n    } else {\n      return (\n        <Timer\n          id={this.props.id}\n          title={this.props.title}\n          project={this.props.project}\n          elapsed={this.props.elapsed}\n          runningSince={this.props.runningSince}\n          onEditClick={this.handleEditClick}\n          onTrashClick={this.props.onTrashClick}\n          onStartClick={this.props.onStartClick}\n          onStopClick={this.props.onStopClick}\n        />\n      );\n    }\n  }\n}\n\nclass Timer extends React.Component {\n  componentDidMount() {\n    this.forceUpdateInterval = setInterval(() => this.forceUpdate(), 50);\n  }\n\n  componentWillUnmount() {\n    clearInterval(this.forceUpdateInterval);\n  }\n\n  handleStartClick = () => {\n    this.props.onStartClick(this.props.id);\n  };\n\n  handleStopClick = () => {\n    this.props.onStopClick(this.props.id);\n  };\n\n  handleTrashClick = () => {\n    this.props.onTrashClick(this.props.id);\n  };\n\n  render() {\n    const elapsedString = helpers.renderElapsedString(\n      this.props.elapsed, this.props.runningSince\n    );\n\n    const limit_seconds = (new Date().getDay() === 6) ?  21600 : 32400\n\n    const time_split = elapsedString.split(':');\n\n    const seconds = (+time_split[0]) * 60 * 60 + (+time_split[1]) * 60 + (+time_split[2]);\n\n    return (\n      <div className='ui centered card'>\n        <div className='content'>\n          <div className='header'>\n            {this.props.title}\n          </div>\n          <div className='meta'>\n            {this.props.project}\n          </div>\n          <div className='center aligned description'>\n            <h2 className={\"ui header \" + ((seconds > limit_seconds) ? 'red' : 'grey')}>\n              {elapsedString}\n            </h2>\n          </div>\n          <div className='extra content'>\n            <span\n              className='right floated edit icon'\n              onClick={this.props.onEditClick}\n            >\n              <i className='edit icon' />\n            </span>\n            <span\n              className='right floated trash icon'\n              onClick={this.handleTrashClick}\n            >\n              <i className='trash icon' />\n            </span>\n          </div>\n        </div>\n        <TimerActionButton\n          timerIsRunning={!!this.props.runningSince}\n          onStartClick={this.handleStartClick}\n          onStopClick={this.handleStopClick}\n        />\n      </div>\n    );\n  }\n}\n\nclass TimerActionButton extends React.Component {\n  render() {\n    if (this.props.timerIsRunning) {\n      return (\n        <div\n          className='ui bottom attached red basic button'\n          onClick={this.props.onStopClick}\n        >\n          Stop\n        </div>\n      );\n    } else {\n      return (\n        <div\n          className='ui bottom attached green basic button'\n          onClick={this.props.onStartClick}\n        >\n          Start\n        </div>\n      );\n    }\n  }\n}\n\nclass TimerForm extends React.Component {\n  state = {\n    title: this.props.title || '',\n    project: this.props.project || '',\n  };\n\n  handleTitleChange = (e) => {\n    this.setState({ title: e.target.value });\n  };\n\n  handleProjectChange = (e) => {\n    this.setState({ project: e.target.value });\n  };\n\n  handleSubmit = () => {\n    this.props.onFormSubmit({\n      id: this.props.id,\n      title: this.state.title,\n      project: this.state.project,\n    });\n  };\n\n  render() {\n    const submitText = this.props.id ? 'Update' : 'Create';\n    return (\n      <div className='ui centered card'>\n        <div className='content'>\n          <div className='ui form'>\n            <div className='field'>\n              <label>Title</label>\n              <input\n                type='text'\n                value={this.state.title}\n                onChange={this.handleTitleChange}\n              />\n            </div>\n            <div className='field'>\n              <label>Project</label>\n              <input\n                type='text'\n                value={this.state.project}\n                onChange={this.handleProjectChange}\n              />\n            </div>\n            <div className='ui two bottom attached buttons'>\n              <button\n                className='ui basic blue button'\n                onClick={this.handleSubmit}\n              >\n                {submitText}\n              </button>\n              <button\n                className='ui basic red button'\n                onClick={this.props.onFormClose}\n              >\n                Cancel\n              </button>\n            </div>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default TimersDashboard;","import TimersDashboard from './TimersDashboard';\n\nfunction App() {\n  return(\n    <TimersDashboard />\n  );\n}\n\nexport default App;\n\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}